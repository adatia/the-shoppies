{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/SearchResults/SearchResults.jsx","components/NominationsList/NominationsList.jsx","components/CustomMovies/CustomMovies.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","value","onChange","onSearch","Card","sectioned","FormLayout","TextField","label","prefix","Icon","source","SearchMinor","SearchResults","results","nomination","nomcount","title","List","type","length","map","item","Item","year","Button","disabled","nominated","onClick","id","TextStyle","NominationsList","nominations","onRemoval","CustomMovies","onCreate","library","onDelete","onNominate","useState","movieTitle","setMovieTitle","movieYear","setMovieYear","Group","primary","Section","destructive","App","searchTerm","setSearchTerm","searchResults","setSearchResults","JSON","parse","localStorage","getItem","setNominations","customMoviesLibrary","setCustomMoviesLibrary","parseInt","ID","setID","removeDuplicates","arr","returnArray","element","findIndex","push","console","log","getResults","a","url","axios","get","res","data","Search","fullYet","imdbID","Title","Year","nom","full","resultsNoDupes","useEffect","addNomination","slice","result","find","resultIdx","newNomineeArray","concat","newCustomLibrary","newResultArray","setItem","stringify","bannerMarkup","Banner","status","toString","AppProvider","i18n","Page","Layout","oneHalf","removalIdx","splice","customIdx","newMovie","newLibrary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d15aa8dd.chunk.js","sourcesContent":["import React from 'react';\nimport { FormLayout, TextField, Icon, Card } from '@shopify/polaris';\nimport { SearchMinor } from '@shopify/polaris-icons';\n\nconst SearchBar = ({ value, onChange, onSearch }) => {\n\n    return (\n        <Card sectioned>\n            <FormLayout>\n                <TextField value={value} label=\"Movie title\" prefix={<Icon source={SearchMinor} />}\n                    onChange={(value) => { onChange(value) }} />\n            </FormLayout>\n        </Card>\n    );\n};\n\nexport { SearchBar }","import React from 'react';\nimport { Card, Button, List, TextStyle } from '@shopify/polaris';\n\nconst SearchResults = ({ value, results, nomination, nomcount }) => {\n    return (\n        <Card title={`Results ${value !== '' ? `for ${value}` : ''}`} sectioned>\n            <List type=\"bullet\">\n\n                {results.length > 0 ? results.map((item) => {\n                    return (\n                        <List.Item key={item.id}>\n                            {item.title} ({item.year}) <Button disabled={item.nominated || nomcount === 5} onClick={() => nomination(item.id)} >\n                                {item.nominated ? \"Nominated\" : \"Nominate\"}\n                            </Button>\n                        </List.Item>\n                    );\n                }) : <TextStyle>No results found</TextStyle>}\n            </List>\n        </Card>\n    );\n};\n\nexport { SearchResults }","import React from 'react';\nimport { Card, Button, List } from '@shopify/polaris';\n\nconst NominationsList = ({ nominations, onRemoval }) => {\n    return (\n        <Card title=\"Nominations\" sectioned>\n            <List type=\"bullet\">\n\n                {nominations.map((item) => {\n                    return (\n                        <List.Item key={item.id}>\n                            {item.title} ({item.year}) <Button onClick={() => onRemoval(item.id)}>Remove</Button>\n                        </List.Item>\n                    );\n                })}\n\n            </List>\n        </Card>\n    );\n};\n\nexport { NominationsList }","import React, { useState } from 'react';\nimport { Card, FormLayout, List, Button, TextField } from '@shopify/polaris';\n\nconst CustomMovies = ({ onCreate, library, onDelete, onNominate, nomcount }) => {\n    const [movieTitle, setMovieTitle] = useState('');\n    const [movieYear, setMovieYear] = useState('2020');\n\n    return (\n        <Card title=\"Add your own movies\" sectioned>\n                <FormLayout>\n                    <FormLayout.Group>\n                        <TextField label=\"Movie title\" value={movieTitle} onChange={(value) => { setMovieTitle(value) }} />\n                        <TextField label=\"Movie year\" value={movieYear} type=\"number\" onChange={(value) => { setMovieYear(value) }} />\n                    </FormLayout.Group>\n\n                    <Button primary disabled={movieTitle === ''} onClick={() => onCreate(movieTitle, movieYear)}>Submit</Button>\n                </FormLayout>\n\n            <Card.Section>\n                {library.map((item) => {\n                    return (\n                        <List.Item key={item.id}>\n                            {item.title} ({item.year}) <Button disabled={item.nominated || nomcount === 5} onClick={() => onNominate(item.id)}> {item.nominated ? \"Nominated\" : \"Nominate\"}</Button> <Button destructive disabled={item.nominated} onClick={() => onDelete(item.id)} >Delete</Button>\n                        </List.Item>\n                    );\n                })}\n            </Card.Section>\n        </Card>\n    );\n};\n\nexport { CustomMovies }","import React, { useState, useEffect } from 'react';\nimport { AppProvider, Layout, Page, Banner } from '@shopify/polaris';\nimport { NominationsList, SearchBar, SearchResults, CustomMovies } from './components';\nimport '@shopify/polaris/dist/styles.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominations, setNominations] = useState(\n    JSON.parse(localStorage.getItem(\"nominations\")) || []\n  );\n  const [customMoviesLibrary, setCustomMoviesLibrary] = useState(\n    JSON.parse(localStorage.getItem(\"customMovies\")) || []\n  );\n  const [ID, setID] = useState(\n    parseInt(localStorage.getItem(\"customMoviesID\")) || customMoviesLibrary.length\n  );\n\n  const API_KEY = \"a53f9bdb\";\n\n  const removeDuplicates = (arr) => {\n    const returnArray = [];\n\n    for (let element of arr) {\n      const idx = returnArray.findIndex((item) => {\n        return item.id === element.id;\n      });\n\n      if (idx === -1) {\n        returnArray.push(element);\n      }\n    }\n\n    console.log(returnArray);\n    return returnArray;\n  }\n\n  const getResults = async () => {\n    if (searchTerm !== '') {\n      const url = `https://www.omdbapi.com/?s=${searchTerm}&type=movie&apikey=${API_KEY}`;\n\n      const res = await axios.get(url);\n\n      if (res?.data?.Search) {\n        const fullYet = nominations.length === 5;\n        const results = res.data.Search.map((item) => {\n          return {\n            id: item.imdbID,\n            title: item.Title,\n            year: item.Year,\n            nominated: nominations.findIndex((nom) => {\n              return nom.id === item.imdbID\n            }) > -1,\n            full: fullYet,\n          }\n        });\n\n        const resultsNoDupes = removeDuplicates(results);\n\n        setSearchResults([...resultsNoDupes]);\n      }\n    } else {\n      setSearchResults([]);\n    }\n\n  };\n\n  useEffect(() => {\n    getResults();\n  }, [searchTerm]);\n\n  const addNomination = (id) => {\n\n    if (nominations.length < 5) {\n\n      if (id.slice(0, 2) === 'cm') {\n        const result = customMoviesLibrary.find((item) => {\n          return item.id === id;\n        });\n\n        const resultIdx = customMoviesLibrary.findIndex((item) => {\n          return item.id === id;\n        });\n\n        const newNomineeArray = nominations.concat([result]);\n        const newCustomLibrary = customMoviesLibrary;\n        newCustomLibrary[resultIdx].nominated = true;\n        setNominations([...newNomineeArray]);\n        setCustomMoviesLibrary([...newCustomLibrary]);\n      } else {\n\n        const result = searchResults.find((item) => {\n          return item.id === id;\n        });\n\n        const resultIdx = searchResults.findIndex((item) => {\n          return item.id === id;\n        });\n\n        const newNomineeArray = nominations.concat([result]);\n        const newResultArray = searchResults;\n        newResultArray[resultIdx].nominated = true;\n        setNominations([...newNomineeArray]);\n        setSearchResults([...newResultArray]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n  }, [nominations]);\n\n  const removeNomination = (id) => {\n    const removalIdx = nominations.findIndex((item) => {\n      return item.id === id;\n    });\n\n    const newNomineeArray = nominations;\n    newNomineeArray.splice(removalIdx, 1);\n    const newResultArray = searchResults;\n    const newCustomLibrary = customMoviesLibrary;\n\n    if (id.slice(0, 2) === \"cm\") {\n      const customIdx = customMoviesLibrary.findIndex((item) => {\n        return item.id === id;\n      });\n\n      if (customIdx > -1) {\n        newCustomLibrary[customIdx].nominated = false;\n      }\n\n      setCustomMoviesLibrary([...newCustomLibrary]);\n    } else {\n      const resultIdx = searchResults.findIndex((item) => {\n        return item.id === id;\n      });\n\n      if (resultIdx > -1) {\n        newResultArray[resultIdx].nominated = false;\n      }\n\n      setSearchResults([...newResultArray]);\n    }\n\n    setNominations([...newNomineeArray]);\n  };\n\n  const bannerMarkup = (\n    <Banner\n      title=\"Thank you for choosing five nominees!\"\n      status=\"success\"\n    />\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"customMovies\", JSON.stringify(customMoviesLibrary));\n  }, [customMoviesLibrary]);\n\n  const createMovie = (title, year) => {\n    const newMovie = {\n      title: title,\n      year: year,\n      id: 'cm' + ID,\n      nominated: false,\n      full: nominations.length === 5\n    };\n\n    setID(ID + 1);\n\n    const newLibrary = customMoviesLibrary.concat([newMovie]);\n    setCustomMoviesLibrary([...newLibrary]);\n\n  };\n\n  const deleteMovie = (id) => {\n    const removalIdx = customMoviesLibrary.findIndex((item) => {\n      return item.id === id;\n    });\n\n    const newCustomLibrary = customMoviesLibrary;\n    newCustomLibrary.splice(removalIdx, 1);\n\n    setCustomMoviesLibrary([...newCustomLibrary]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"customMoviesID\", ID.toString());\n  }, [ID]);\n\n  return (\n    <AppProvider i18n={{}}>\n      <Page title=\"The Shoppies\">\n        <Layout>\n          {nominations.length === 5 ? (<Layout.Section>\n            {bannerMarkup}\n          </Layout.Section>) : null}\n          <Layout.Section>\n            <SearchBar value={searchTerm} onChange={setSearchTerm}\n              onSearch={getResults} />\n          </Layout.Section>\n\n          <Layout.Section oneHalf>\n            <SearchResults value={searchTerm} results={searchResults} nomination={addNomination} nomcount={nominations.length} />\n          </Layout.Section>\n\n          <Layout.Section oneHalf>\n            <NominationsList nominations={nominations} onRemoval={removeNomination} />\n          </Layout.Section>\n\n          <Layout.Section>\n            <CustomMovies onCreate={createMovie} library={customMoviesLibrary} onDelete={deleteMovie} \n            onNominate={addNomination} nomcount={nominations.length} />\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}